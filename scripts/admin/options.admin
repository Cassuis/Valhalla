var strconv = import("strconv")

if state == 1 {
    options = "The following options are available to you:\r\n"
    options += "#dRemember all GM activity is logged\r\n"
    options += "#L0##bSuspicious players#l\r\n"
    options += "#L1#Current map info#l\r\n"			
    options += "#L2#Start an event#l\r\n"
    options += "#L3#Stop an event#l\r\n"
    options += "#L4#Spawn mob#l\r\n"
    options += "#L5#Fix common issues#l\r\n"

    return SendSelection(options)
} else if state == 2 {
    if selection == 0 {
        options = "Dummy players:\r\n"
        options += "#L0##bplayer1#l\r\n"
        options += "#L1#player 2#l\r\n"

        state = 4

        return SendSelection(options)
    } else if selection == 1 {
        m = Maps[int32(player.Char().MapID)]
        nInsts = m.GetNumberOfInstances()

        text = "Players:\r\n#b"

        for i = 0; i < nInsts; i++ {
            players = m.GetPlayers(i)

            for j = 0; j < len(players); j++ {
                text += "#L" + strconv.ParseInt(j, 10, 64) + "#" + players[j].Char().Name + "#l\r\n"
            }            
        }        

        return SendOk(text)
    } else if selection == 2 {
        options = "Start:\r\n"
        options += "#L0##bEvent 1#l\r\n"
        options += "#L1#Event 2#l\r\n"

        state = 20

        return SendSelection(options)
    } else if selection == 3 {
        options = "Stop:\r\n"
        options += "#L0##bEvent 1#l\r\n"
        options += "#L1#Event 2#l\r\n"

        state = 30

        return SendSelection(options)
    } else if selection == 4 {
        return SendOk("Why are you trying this?")
    } else if selection == 5 {
        options = "Fix:\r\n"
        options += "#L0##bMissing KPQ ticket(s)#l\r\n"
        options += "#L1#Missing LPQ ticket(s)#l\r\n"

        state = 50

        return SendSelection(options)
    }
        
    return SendBack("Unkown selection")    			
} else if state == 3 {
    ///////////////////////////////////
    // this state is left blank to trick state system
    ///////////////////////////////////
} else if state == 4 {
    state = 3 // need to make sure state system 'stack' is set to correct height
    return SendOk("Cannot do anything at the moment")
} else if state == 20 {
    state = 3 

    return SendOk("Starting events not implemented")
} else if state == 30 {
    state = 3

    return SendOk("Stopping events not implemented")
} else if state == 50 {
    state = 3 

    if selection == 0 {
        return SendOk("KPQ not implemented yet")
    } else if selection == 1 {
        return SendOk("LPQ not implemented yet")
    }    
}